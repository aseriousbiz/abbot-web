root = true
# Remove the line below if you want to inherit .editorconfig settings from higher directories

# C# files
[*.cs]
encoding = utf-8

# Suppress CA5391, since it seems to be bad at detecting where anti-froggery is actually needed.
dotnet_diagnostic.ca5391.severity = suggestion

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
insert_final_newline = true
end_of_line = lf

# https://learn.microsoft.com/en-us/visualstudio/ide/text-spell-checker
spelling_exclusion_path = ./.vs/exclusion.dic

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
#file_header_template =

# this. and Me. preferences
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none

# Modifier preferences
dotnet_style_require_accessibility_modifiers = never:suggestion

# Expression-level preferences
dotnet_style_coalesce_expression = true:silent
dotnet_style_collection_initializer = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_namespace_match_folder = true:none
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true

# Parameter preferences
dotnet_code_quality_unused_parameters = all

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = 0

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = true:none
csharp_style_var_for_built_in_types = true:none
csharp_style_var_when_type_is_apparent = true:none

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = true
csharp_style_expression_bodied_methods = true
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public, private, protected, internal, new, static, abstract, virtual, sealed, readonly, override, extern, unsafe, volatile, async:suggestion

# Code-block preferences
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = file_scoped

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_pattern_local_over_anonymous_function = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = control_blocks,methods,properties,types,object_collection_array_initializers
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

#### Naming styles ####

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.private_fields.required_prefix = _
dotnet_naming_style.private_fields.required_suffix = 
dotnet_naming_style.private_fields.word_separator = 
dotnet_naming_style.private_fields.capitalization = camel_case

dotnet_naming_style.lower_camel_case_style.capitalization = camel_case


# Naming symbols

dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds = namespace,class,struct,enum,delegate
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities = *

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = *
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = *
dotnet_naming_symbols.non_field_members.required_modifiers = 

dotnet_naming_symbols.event_symbols.applicable_kinds = event
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *

dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *

dotnet_naming_symbols.method_symbols.applicable_kinds = method
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *

dotnet_naming_symbols.property_symbols.applicable_kinds = property
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *

dotnet_naming_symbols.parameter_symbols.applicable_kinds = parameter
dotnet_naming_symbols.parameter_symbols.applicable_accessibilities = *

dotnet_naming_symbols.type_parameter_symbols.applicable_kinds = type_parameter
dotnet_naming_symbols.type_parameter_symbols.applicable_accessibilities = *

dotnet_naming_symbols.private_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_fields_symbols.required_modifiers = 

dotnet_naming_symbols.constants_symbols.applicable_kinds = field
dotnet_naming_symbols.constants_symbols.applicable_accessibilities = *
dotnet_naming_symbols.constants_symbols.required_modifiers = const

dotnet_naming_symbols.static_readonly_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.static_readonly_fields_symbols.applicable_accessibilities = *
dotnet_naming_symbols.static_readonly_fields_symbols.required_modifiers = static,readonly

dotnet_naming_symbols.private_static_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.private_static_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_static_fields_symbols.required_modifiers = static

dotnet_naming_symbols.public_fields_symbols.applicable_kinds = field
dotnet_naming_symbols.public_fields_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected


# Naming rules

dotnet_naming_rule.types_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.import_to_resharper = as_predefined
dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.type_parameter_symbols_rule.import_to_resharper = as_predefined
dotnet_naming_rule.type_parameter_symbols_rule.severity = warning
dotnet_naming_rule.type_parameter_symbols_rule.style = camel_case
dotnet_naming_rule.type_parameter_symbols_rule.symbols = type_parameter_symbols

dotnet_naming_rule.constants_rule.import_to_resharper = as_predefined
dotnet_naming_rule.constants_rule.severity = warning
dotnet_naming_rule.constants_rule.style = pascal_case
dotnet_naming_rule.constants_rule.symbols = constants_symbols

dotnet_naming_rule.event_rule.import_to_resharper = as_predefined
dotnet_naming_rule.event_rule.severity = warning
dotnet_naming_rule.event_rule.style = pascal_case
dotnet_naming_rule.event_rule.symbols = event_symbols

dotnet_naming_rule.interfaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.interfaces_rule.severity = warning
dotnet_naming_rule.interfaces_rule.style = begins_with_i
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols

dotnet_naming_rule.method_rule.import_to_resharper = as_predefined
dotnet_naming_rule.method_rule.severity = warning
dotnet_naming_rule.method_rule.style = pascal_case
dotnet_naming_rule.method_rule.symbols = method_symbols

dotnet_naming_rule.property_rule.import_to_resharper = as_predefined
dotnet_naming_rule.property_rule.severity = warning
dotnet_naming_rule.property_rule.style = pascal_case
dotnet_naming_rule.property_rule.symbols = property_symbols

dotnet_naming_rule.types_and_namespaces_rule.import_to_resharper = as_predefined
dotnet_naming_rule.types_and_namespaces_rule.severity = warning
dotnet_naming_rule.types_and_namespaces_rule.style = pascal_case
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols

dotnet_naming_rule.private_fields_symbols_rule.applicable_kinds = as_predefined
dotnet_naming_rule.private_fields_symbols_rule.severity = warning
dotnet_naming_rule.private_fields_symbols_rule.style = private_fields
dotnet_naming_rule.private_fields_symbols_rule.symbols = private_fields_symbols

dotnet_naming_rule.static_readonly_fields_symbols_rule.applicable_kinds = as_predefined
dotnet_naming_rule.static_readonly_fields_symbols_rule.severity = warning
dotnet_naming_rule.static_readonly_fields_symbols_rule.style = pascal_case
dotnet_naming_rule.static_readonly_fields_symbols_rule.symbols = static_readonly_fields_symbols

dotnet_naming_rule.private_static_fields_symbols_rule.applicable_kinds = as_predefined
dotnet_naming_rule.private_static_fields_symbols_rule.severity = warning
dotnet_naming_rule.private_static_fields_symbols_rule.style = private_fields
dotnet_naming_rule.private_static_fields_symbols_rule.symbols = private_static_fields_symbols

dotnet_naming_rule.public_fields_symbols_rule.applicable_kinds = as_predefined
dotnet_naming_rule.public_fields_symbols_rule.severity = warning
dotnet_naming_rule.public_fields_symbols_rule.style = pascal_case
dotnet_naming_rule.public_fields_symbols_rule.symbols = public_fields_symbols


# ReSharper properties
resharper_blank_lines_after_control_transfer_statements = 1
resharper_blank_lines_after_multiline_statements = 1
resharper_blank_lines_around_invocable = 1
resharper_blank_lines_around_property = 0
resharper_blank_lines_around_single_line_auto_property = 1
resharper_blank_lines_around_single_line_field = 0
resharper_blank_lines_before_control_transfer_statements = 0
resharper_csharp_blank_lines_around_field = 0
resharper_csharp_blank_lines_around_single_line_field = 0
resharper_csharp_blank_lines_around_invocable = 1
resharper_csharp_brace_style = next_line
resharper_csharp_max_line_length = 120
resharper_csharp_naming_rule.constants = AaBb
resharper_csharp_naming_rule.event = AaBb
resharper_csharp_naming_rule.interfaces = I + AaBb
resharper_csharp_naming_rule.method = AaBb
resharper_csharp_naming_rule.private_constants = AaBb
resharper_csharp_naming_rule.private_static_fields = _ + aaBb
resharper_csharp_naming_rule.private_static_readonly = AaBb
resharper_csharp_naming_rule.property = AaBb
resharper_csharp_naming_rule.types_and_namespaces = AaBb
resharper_csharp_use_indent_from_vs = false
resharper_csharp_wrap_after_declaration_lpar = false
resharper_csharp_wrap_after_invocation_lpar = false
resharper_csharp_wrap_arguments_style = chop_if_long
resharper_csharp_wrap_before_binary_opsign = true
resharper_csharp_wrap_chained_binary_expressions = wrap_if_long
resharper_csharp_wrap_parameters_style = wrap_if_long
resharper_csharp_wrap_ternary_expr_style = chop_always
resharper_for_built_in_types = use_var_when_evident
resharper_max_attribute_length_for_same_line = 100
resharper_place_accessorholder_attribute_on_same_line = false
resharper_place_expr_accessor_on_single_line = true
resharper_indent_preprocessor_region = no_indent
resharper_place_expr_method_on_single_line = false
resharper_keep_existing_declaration_block_arrangement = false
resharper_place_expr_property_on_single_line = true
resharper_keep_existing_embedded_block_arrangement = false
resharper_place_simple_embedded_statement_on_same_line = true
resharper_keep_existing_enum_arrangement = false
resharper_method_or_operator_body = block_body
resharper_space_after_attributes = false
resharper_place_field_attribute_on_same_line = false
resharper_space_within_single_line_array_initializer_braces = true
resharper_trailing_comma_in_multiline_lists = true
resharper_use_heuristics_for_body_style = true
resharper_wrap_after_declaration_lpar = false
resharper_wrap_after_invocation_lpar = false
resharper_wrap_chained_binary_expressions = chop_if_long
resharper_wrap_object_and_collection_initializer_style = chop_always



# ReSharper inspection severities
resharper_arrange_redundant_parentheses_highlighting = hint
resharper_arrange_this_qualifier_highlighting = hint
resharper_arrange_trailing_comma_in_multiline_lists_highlighting = none
resharper_arrange_type_member_modifiers_highlighting = hint
resharper_arrange_type_modifiers_highlighting = hint
resharper_built_in_type_reference_style_for_member_access_highlighting = hint
resharper_built_in_type_reference_style_highlighting = hint
resharper_check_namespace_highlighting = none
resharper_redundant_base_qualifier_highlighting = warning
resharper_specify_a_culture_in_string_conversion_explicitly_highlighting = none
resharper_string_literal_typo_highlighting = none
resharper_suggest_var_or_type_built_in_types_highlighting = none
resharper_suggest_var_or_type_elsewhere_highlighting = none
resharper_suggest_var_or_type_simple_types_highlighting = none
