@page "/skills/{skill}/patterns"
@model Serious.Abbot.Pages.Skills.Patterns.IndexPageModel
@{
    ViewContext.SetPageInfo("Patterns", "Pattern List", "Patterns");
}
<div class="sm:flex items-start mx-1 my-2">
    <div class="border border-gray-200 bg-gray-100 mx-1 text-sm flex-grow-0 sm:w-1/4 mt-2 sm:mt-0">
        <div class="border-b bg-white p-2">
            <header class="bg-blue-500 px-2">
                <h1 class="text-white">
                    Skill:
                    <span>@Model.SkillName</span>
                </h1>
            </header>

            <nav>
                <ul class="m-2 font-mono" role="tablist">
                    <li class="mb-1">
                        Code
                    </li>

                    <li class="mb-1">
                        <a class="font-mono text-blue-500 hover:text-gray-700"
                           asp-page="../Activity/Index"
                           asp-route-skill="@Model.SkillName">
                            View activity
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <div class="flex-grow">
        <section class="border border-gray-200 mx-1 mt-2 sm:mt-0">
            <header class="px-2 m-2 bg-blue-50">
                <h1 class="text-sm">
                    Skill editor
                </h1>
            </header>

            <partial name="Skills/_SkillNavigationTabs" model="Model.Skill" />

            <section class="m-4">
                <header>
                    <div class="max-w-3xl mb-2">
                        <h2 class="font-bold text-lg">
                            Patterns
                        </h2>

                        <p class="mb-2">
                            Patterns allow skills to react ambiently to chat messages where the skill is not directly called via mentioning Abbot or the shortcut character.
                        </p>
                    </div>
                    <div class="sm:flex items-center">
                        @if (Model.CanEdit) {
                            <skilllink asp-page="Create" class="btn flex-shrink-0">Create Pattern</skilllink>
                        } else {
                            <button class="btn btn-disabled flex-shrink-0" disabled>Create Pattern</button>
                        }

                        @if (!Model.CanEdit) {
                            <p class="text-sm text-yellow-600 ml-auto mt-2 sm:mt-0">
                                <span class="font-mono rounded inline-block px-1 text-ms bg-yellow-100">Edit</span>
                                 permission for the <span class="font-bold">@Model.SkillName</span> skill is required to create or edit patterns. <partial name="Shared/_PermissionTooltip" model="Model.SkillName" />
                            </p>
                        }
                    </div>
                </header>

                <section class="mt-4">
                    <div class="rounded-lg px-4 py-1 border flex text-sm font-bold" aria-hidden="true">
                        Pattern name
                    </div>

                    @if (Model.Patterns.Any()) {
                        <div class="mb-4 divide-y">
                            @foreach (var pattern in Model.Patterns) {
                                <div class="p-4">
                                    <h2 class="mb-1">
                                        <a asp-page="Edit"
                                           class="text-blue-500 hover:text-gray-700"
                                           asp-route-skill="@pattern.Skill.Name"
                                           asp-route-slug="@pattern.Slug"
                                           aria-label="Pattern name: @pattern.Name">
                                            @pattern.Name
                                        </a>

                                        <partial name="_PatternMetadata" model="@pattern" />
                                    </h2>

                                    <div class="flex items-center">
                                        @if (pattern.PatternType != PatternType.None) {
                                            <span class="mr-2 font-mono text-xs text-gray-500 uppercase">
                                                @pattern.PatternType.Humanize()
                                            </span>
                                        }

                                        <span class="bg-gray-100 text-sm max-w-screen-sm px-2 py-1 font-mono rounded-lg inline-block text-gray-500"
                                              aria-label="@pattern.Name pattern: @pattern.Pattern">
                                            @pattern.Pattern
                                        </span>
                                    </div>
                                </div>
                            }
                        </div>
                    } else {
                        <div class="rounded overflow-hidden mt-2">
                            <blankslate>
                                <h3 class="text-base font-bold">
                                    Your organization does not have any patterns.
                                </h3>
                                <p>
                                    To create a pattern, click "Create Pattern" above.
                                </p>
                            </blankslate>
                        </div>
                    }
                </section>
            </section>
        </section>
    </div>
</div>
