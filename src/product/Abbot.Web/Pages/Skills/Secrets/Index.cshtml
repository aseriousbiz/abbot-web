@page "/skills/{skill}/secrets"
@model Serious.Abbot.Pages.Skills.Secrets.IndexPageModel
@{
    ViewContext.SetPageInfo("Secrets", "Secret List", "Secrets");
}

<staff-menu-zone>
    <h3 class="font-semibold">Secret Mappings</h3>
    @if (Model.Secrets.Any()) {
        <ul>
        @foreach (var secret in Model.Secrets) {
            <li class="flex flex-row gap-2 items-baseline">
                <code>@secret.Name</code> - <copy-box>@secret.KeyVaultSecretName</copy-box>
            </li>
        }
        </ul>
    }
</staff-menu-zone>

<div class="sm:flex items-start mx-1 my-2">
    <div class="border border-gray-200 bg-gray-100 mx-1 text-sm flex-grow-0 sm:w-1/4 mt-2 sm:mt-0">
        <div class="border-b bg-white p-2">
            <header class="bg-blue-500 px-2">
                <h1 class="text-white">
                    Skill:
                    <span>@Model.SkillName</span>
                </h1>
            </header>

            <nav>
                <ul class="m-2 font-mono" role="tablist">
                    <li class="mb-1">
                        Code
                    </li>

                    <li class="mb-1">
                        <a class="font-mono text-blue-500 hover:text-gray-700"
                           asp-page="../Activity/Index"
                           asp-route-skill="@Model.SkillName">
                            View activity
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <div class="flex-grow">
        <section class="border border-gray-200 mx-1 mt-2 sm:mt-0">
            <header class="px-2 m-2 bg-blue-50">
                <h1 class="text-sm">
                    Skill editor
                </h1>
            </header>

            <partial name="Skills/_SkillNavigationTabs" model="Model.Skill" />

            <section class="m-4">
                <header>
                    <div class="max-w-3xl mb-2">
                        <h2 class="font-bold text-lg">
                            Secrets
                        </h2>
                        <p class="mb-2">
                            Secrets provide a secure way to supply skills with secret information that should not be hard-coded in the skill.
                        </p>

                        <p class="text-gray-500">
                            Include secrets in your skill with:
                            <span class="rounded font-mono px-2 py-1 bg-gray-100 text-gray-700 text-sm">@Model.Language.FormatSecretUsage("SecretName")</span>
                        </p>
                    </div>

                    <div class="sm:flex items-center max-w-5xl">
                        @if (Model.CanEdit)
                        {
                            <skilllink class="btn" asp-page="Create">Create new secret</skilllink>
                        }
                        else
                        {
                            <button class="btn btn-disabled" disabled>Create new secret</button>
                        }

                        <div class="sm:ml-auto text-sm">
                            @if (!Model.CanEdit || ViewContext.IsStaffMode()) {
                                @if (!Model.CanEdit) {
                                    <p class="text-right text-yellow-900 bg-yellow-100 rounded px-2">
                                        <span class="font-mono font-bold text-xs">Edit</span>
                                        permission for the
                                        <span class="font-bold">
                                            @Model.SkillName
                                        </span>
                                        skill is required to create or edit secrets.
                                        <partial name="Shared/_PermissionTooltip" model="Model.SkillName"/>
                                    </p>
                                }
                            }
                        </div>
                    </div>
                </header>

                <section class="my-4">
                    @if (Model.Secrets.Any()) {
                        <div class="rounded-lg px-4 py-1 border flex text-sm font-bold" aria-hidden="true">
                            <div>Name</div>
                        </div>

                        <div class="mb-4 divide-y">
                            @foreach (var secret in Model.Secrets)
                            {
                                <div class="p-4">
                                    <div class="sm:flex items-center max-w-5xl">
                                        <h2 class="mb-1 font-mono bg-gray-100 max-w-screen-sm px-2 py-1 font-mono rounded-lg inline-block text-black">
                                            @if (Model.CanEdit)
                                            {
                                                <skilllink asp-page="Edit" asp-route-name="@secret.Name" class="text-blue-500">
                                                    @secret.Name
                                                </skilllink>
                                            }
                                            else
                                            {
                                                @secret.Name
                                            }
                                        </h2>

                                        <div class="ml-auto sm:pl-4">
                                            <p class="sm:text-right">@secret.Description</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    } else {
                        <div class="border border-gray-100 rounded overflow-hidden">
                            <blankslate>
                                <span class="text-gray-500">There are no secrets for this skill.</span>
                            </blankslate>
                        </div>
                    }
                </section>
            </section>
        </section>
    </div>
</div>
