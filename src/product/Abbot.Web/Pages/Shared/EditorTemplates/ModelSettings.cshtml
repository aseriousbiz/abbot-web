@using global::AI.Dev.OpenAI.GPT
@using Serious.Abbot.AI
@using Serious.Abbot.AI.Templating
@model Serious.Abbot.AI.ModelSettings
@inject IOpenAIClient OpenAIClient
@{
    var modelList = ViewData["models"] as IEnumerable<SelectListItem>
        ?? (await OpenAIClient.GetModelsAsync())
            .OrderBy(m => m.ModelID)
            .Select(m => new SelectListItem(m.ModelID, m.ModelID))
            .ToList();
}

<div class="flex mt-3">
    <div>
        <label class="block mb-2 text-sm font-medium text-gray-900 label" asp-for="Model">Model</label>
        <div class="relative">
            <select class="block form-select" asp-for="Model" asp-items="modelList"></select>
        </div>
    </div>

    <div class="ml-3">
        <label class="block mb-2 text-sm font-medium text-gray-900 label" asp-for="Temperature">Temperature</label>
        <div class="relative">
            <input class="block form-select" asp-for="Temperature"/>
        </div>
        <span asp-validation-for="Temperature"></span>
    </div>
</div>

@if (ViewData["hide-prompt"] is not true) {
    <div class="mt-3">
        <label class="block mb-2 text-sm font-medium text-gray-900 label" asp-for="Prompt.Text">Prompt</label>
        <p class="text-gray-700 text-sm">
            @if (ViewData["context"] is {} context) {
                <span>@Html.Raw(context)</span>
            }
        </p>
        <div>
            <textarea asp-for="Prompt.Text"
                rows="4"
                class="block p-2 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500">
            </textarea>
            <small class="text-gray-700">@GPT3Tokenizer.Encode(Model.Prompt.Text ?? "").Count tokens</small>
        </div>
        <div class="form-select-wrapper">
            <select class="form-select" asp-for="Prompt.Version" asp-items="Html.GetEnumSelectList<PromptVersion>()"></select>
        </div>
    </div>
}
