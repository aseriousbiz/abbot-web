@using Newtonsoft.Json.Linq
@using Newtonsoft.Json
@model IReadOnlyList<Setting>
@{
    var allowDelete = ViewData["AllowDeleteSetting"] as bool? ?? true;
}
@if (Model?.Count > 0)
{
    <table class="w-full">
        <thead>
        <tr>
            <th class="text-left border-b p-3">Name</th>
            <th class="text-left border-b p-3">Value</th>
            <th class="text-left border-b p-3">Expires</th>
            <th class="text-left border-b p-3">Created</th>
            <th class="text-left border-b p-3">Modified</th>
            <th class="border-b p-3"></th>
        </tr>
        </thead>
        @foreach (var setting in Model)
        {
            <tr>
                <td class="align-middle p-3"><code>@setting.Name</code></td>
                <td class="align-middle p-3">
                    @{
                        // A MONDO HACK, but it kinda works
                        var value = setting.Value;
                        if (value.StartsWith("{"))
                        {
                            // It's _probably_ JSON, try and format it?
                            try {
                                value = JToken.Parse(value).ToString(Formatting.Indented);
                            }
                            catch (JsonException) {
                                // Never mind!
                            }
                        }
                    }
                    <pre class="max-w-xs max-h-56 overflow-auto">@value</pre>
                </td>
                <td class="align-middle p-3">
                    @if (setting.Expiry is {} expiry) {
                        <span data-tooltip="@expiry">@expiry.Humanize()</span>
                    } else {
                        <em>Never</em>
                    }
                </td>
                <td class="align-middle p-3">
                    <span data-tooltip="@setting.Created">@setting.Created.Humanize()</span>
                    by
                    <a asp-page="/Staff/Users/Details" asp-route-id="@setting.CreatorId">@setting.Creator.DisplayName</a>
                </td>
                <td class="align-middle p-3">
                    <span data-tooltip="@setting.Modified">@setting.Modified.Humanize()</span>
                    by
                    <a asp-page="/Staff/Users/Details" asp-route-id="@setting.ModifiedById">@setting.ModifiedBy.DisplayName</a>
                </td>
                <td class="align-middle p-3">
                    @if (allowDelete){
                        <form asp-page-handler="SettingDelete" method="post">
                            <button class="btn btn-danger"
                                data-confirm="Are you sure you want to delete the @setting.Name setting?"
                                data-tooltip="Delete Setting">
                                <input type="hidden" name="name" value="@setting.Name" />
                                <i class="fa-solid fa-trash"></i>
                            </button>
                        </form>
                    }
                </td>
            </tr>
        }
    </table>
}
else
{
    <blankslate>
        <div class="flex flex-col items-center gap-2">
            <i class="fa fa-empty-set text-3xl"></i>
            <span class="text-gray-500">No settings found!</span>
        </div>
    </blankslate>
}
