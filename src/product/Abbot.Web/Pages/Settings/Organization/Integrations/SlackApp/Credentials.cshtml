@page "{handler?}"
@model Serious.Abbot.Pages.Settings.Organization.Integrations.SlackApp.CredentialsModel

@{
    ViewContext.SetPageInfo("Integrations", "Custom Slack App Credentials");
}

<partial name="../_Header" model="Model.Viewer"/>
<partial name="Shared/_StatusMessage" model="Model.StatusMessage"/>

<page-body>
    <round-box>
        <div class="font-semibold">
            <a asp-page="../Index">Integrations</a> /
            <a asp-page="Index">Custom Slack App</a> /
            Credentials
        </div>
        <p>
            Abbot needs credentials to act on behalf of your Slack App.
            <a class="btn" href="https://api.slack.com/apps">View Apps</a>
        </p>
        <h2 class="title">App Credentials</h2>
        <form method="post" class="flex flex-col items-start">
            <label class="font-semibold">App ID</label>
            @if (Model.Editing)
            {
                <input class="form-input w-96" asp-for="SlackAppId" readonly="@(Model.IsInstalled)">
                <span class="pl-2 mb-2 text-gray-500" asp-validation-for="SlackAppId">
                    @if (Model.IsInstalled){
                        @:Cannot change App ID while installed.
                    }
                </span>
            }
            else if (Model.Integration is { ExternalId: {Length: > 0 } slackAppId })
            {
                <a href="@Model.SlackAppUrl"><code>@slackAppId</code></a>
            }
            else
            {
                <span class="text-gray-500">Not yet set</span>
            }

            <label class="mt-4 font-semibold">Client ID</label>
            @if (Model.Editing)
            {
                <input class="form-input w-96" asp-for="Credentials.ClientId">
                <span asp-validation-for="Credentials.ClientId"></span>
            }
            else if (Model.Settings is { Credentials.ClientId.Length: >0 })
            {
                <code>@Model.Credentials.ClientId</code>
            }
            else
            {
                <span class="text-gray-500">Not yet set</span>
            }

            <label class="mt-4 font-semibold">Client Secret</label>
            @if (Model.Editing)
            {
                <input class="form-input w-96" asp-for="Credentials.ClientSecret" value="@(Model.Credentials.ClientSecret?.Reveal().TruncateToLength(8,true))">
                <span asp-validation-for="Credentials.ClientSecret"></span>
            }
            else if (Model.Settings is { Credentials.ClientSecret.Empty: false })
            {
                <code>@(Model.Credentials.ClientSecret?.Reveal().TruncateToLength(8, true))</code>
            }
            else
            {
                <span class="text-gray-500">Not yet set</span>
            }

            <label class="mt-4 font-semibold">Signing Secret</label>
            @if (Model.Editing)
            {
                <input class="form-input w-96" asp-for="Credentials.SigningSecret" value="@(Model.Credentials.SigningSecret?.Reveal().TruncateToLength(8,true))">
                <span asp-validation-for="Credentials.SigningSecret"></span>
            }
            else if (Model.Settings is { Credentials.SigningSecret.Empty: false })
            {
                <code>@(Model.Credentials.SigningSecret?.Reveal().TruncateToLength(8, true))</code>
            }
            else
            {
                <span class="text-gray-500">Not yet set</span>
            }

            <div class="mt-4 flex gap-x-2 w-96">
                <a asp-page="./Index" class="btn">Back</a>
                <div class="flex-grow"></div>
                @if (Model.Editing)
                {
                    <a asp-route-editing="" asp-page-handler="" class="btn">Cancel</a>
                    <button type="submit" class="btn btn-primary">Save Credentials</button>
                }
                else
                {
                    <a asp-route-editing="true" class="btn">Edit settings</a>
                    @if (Model.IsInstalled) {
                        <span class="btn btn-disabled" data-tooltip="Cannot clear credentials while Custom Slack App is installed.">Clear</span>
                    }
                    else if (Model.SlackAppId is { Length: > 0 }) {
                        <button asp-page-handler="ClearCredentials" class="btn btn-danger" data-confirm="Are you sure you want to clear credentials? This cannot be undone."> Clear </button>
                    }
                }
            </div>
        </form>
        @if (Model.Manifest is not null)
        {
            var manifest_json = Uri.EscapeDataString(SlackSerializer.Serialize(Model.Manifest));

            <h3 class="text-2xl mt-4 mb-1">Manifest JSON</h3>
            <a class="btn btn-primary mb-1" target="_blank" href="https://api.slack.com/apps?new_app=1&manifest_json=@(manifest_json)">
                Create App
            </a>
            <round-box>
                <textarea class="w-full" rows="30">@SlackSerializer.Serialize(Model.Manifest, Newtonsoft.Json.Formatting.Indented)</textarea>
            </round-box>
        }
    </round-box>
</page-body>
