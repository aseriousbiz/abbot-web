<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
  <PropertyGroup>
    <RootNamespace>Serious.Abbot</RootNamespace>
    <RazorLangVersion>latest</RazorLangVersion>
    <IsPackable>false</IsPackable>
    <UserSecretsId>233d4ae9-5f4a-41cf-b87f-711eeea9e0a0</UserSecretsId>
    <PreserveCompilationContext>true</PreserveCompilationContext>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
    <!-- Suppress warnings about no doc comments. We're primarily using XML docs in this project for Swashbuckle. -->
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>

  <Target Name="RunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Condition="'$(SkipNpm)' != 'true'" Command="npm ci" />
    <Exec Condition="'$(SkipNpm)' != 'true'" Command="npm run release" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <ItemGroup>
    <EmbeddedResource Include="Templates\ink-template1.txt" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="AspNetCore.HealthChecks.Hangfire" />
    <PackageReference Include="Azure.Monitor.OpenTelemetry.Exporter" />
    <PackageReference Include="Azure.Storage.Blobs" />
    <PackageReference Include="Azure.Security.KeyVault.Keys" />
    <PackageReference Include="Azure.Security.KeyVault.Secrets" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" />
    <PackageReference Include="Auth0.AuthenticationApi" />
    <PackageReference Include="Auth0.ManagementApi" />
    <PackageReference Include="Azure.Identity" />
    <PackageReference Include="Azure.Storage.Files.Shares" />
    <PackageReference Include="CronExpressionDescriptor" />
    <PackageReference Include="Hangfire.AspNetCore" />
    <PackageReference Include="Hangfire.Core" />
    <PackageReference Include="Hangfire.PostgreSql" />
    <PackageReference Include="MassTransit.Azure.ServiceBus.Core" />
    <PackageReference Include="MassTransit.Hangfire" />
    <PackageReference Include="MassTransit.StateMachineVisualizer" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" />
    <PackageReference Include="Microsoft.Azure.AppConfiguration.AspNetCore" />
    <PackageReference Include="Microsoft.Azure.KeyVault.Core" />
    <PackageReference Include="Microsoft.Bot.Builder.Azure" />
    <PackageReference Include="Microsoft.Bot.Builder.Integration.AspNet.Core" />
    <PackageReference Include="Microsoft.CodeAnalysis.Common" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Features" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.Azure" />
    <PackageReference Include="Microsoft.Extensions.Diagnostics.HealthChecks.EntityFrameworkCore" />
    <PackageReference Include="Microsoft.FeatureManagement" />
    <PackageReference Include="Microsoft.FeatureManagement.AspNetCore" />
    <PackageReference Include="MiniProfiler.AspNetCore.Mvc" />
    <PackageReference Include="MiniProfiler.EntityFrameworkCore" />
    <PackageReference Include="MirrorSharp.AspNetCore" />
    <PackageReference Include="MirrorSharp.Common" />
    <PackageReference Include="Npgsql.OpenTelemetry" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.EntityFrameworkCore" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Hangfire" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Http" />
    <PackageReference Include="Swashbuckle.AspNetCore" />
    <PackageReference Include="Swashbuckle.AspNetCore.Newtonsoft" />
    <PackageReference Include="TagHelperPack" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\..\scripting\Abbot.Scripting.Interfaces\Abbot.Scripting.Interfaces.csproj" />
    <ProjectReference Include="..\Abbot.Common\Abbot.Common.csproj" />
    <ProjectReference Include="..\..\eventing\Abbot.Eventing\Abbot.Eventing.csproj" />
    <ProjectReference Include="..\Abbot.ScriptReferences\Abbot.ScriptReferences.csproj">
    </ProjectReference>
    <ProjectReference Include="..\Abbot.Web.Library\Abbot.Web.Library.csproj" />
    <ProjectReference Include="..\..\libraries\Serious.Library\Serious.Library.csproj" />
    <ProjectReference Include="..\Serious.Razor\Serious.Razor.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Update="**\package.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
    <Content Update="**\package-lock.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
    <Content Update="**\packages.lock.json" CopyToPublishDirectory="Never" CopyToOutputDirectory="Never" />
  </ItemGroup>
  
  <Target Name="CopyFrameworkXmlDocumentation" AfterTargets="ResolveReferences">
    <ItemGroup>
      <Content Include="@(Reference->'%(RootDir)%(Directory)%(Filename).xml')" Link="@(Reference->'refs/%(Filename).xml')" Condition="($([System.String]::new('%(Filename)').StartsWith('System')) or '%(Filename)' == 'netstandard') and Exists('%(RootDir)%(Directory)%(Filename).xml')">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>

  <Target Name="CopyPackageXmlDocumentation" BeforeTargets="Build">
    <ItemGroup>
      <DocumentationFiles Include="%(Reference.RelativeDir)%(Reference.Filename).xml" />
    </ItemGroup>
    <Copy SourceFiles="@(DocumentationFiles)" DestinationFolder="$(OutputPath)" Condition="Exists('%(RootDir)%(Directory)%(Filename)%(Extension)')" />
  </Target>

  <!-- Copy indirect dependencies into the non-indirect-reference output path -->
  <Target Name="CopyScriptReferences" AfterTargets="Build">
    <ItemGroup>
      <ScriptReferences Include="$(RepoBinPath)\Abbot.ScriptReferences\refs\*.dll" />
    </ItemGroup>
    <Copy SourceFiles="@(ScriptReferences)" DestinationFolder="$(OutputPath)" />
  </Target>

</Project>
